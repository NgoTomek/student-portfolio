rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isValidPortfolio() {
      let requiredFields = ['personalInfo', 'uid', 'createdAt', 'updatedAt'];
      return requiredFields.hasAll(request.resource.data.keys());
    }
    
    function isPublished(resource) {
      return resource.data.isPublished == true;
    }
    
    // Rules for users collection
    match /users/{userId} {
      // Users can read their own data
      // Admins can read all user data
      allow read: if isOwner(userId) || isAdmin();
      
      // Users can only create their own document
      allow create: if isOwner(userId) && 
                     request.resource.data.uid == userId &&
                     request.resource.data.role == 'user';
                     
      // Users can update their own document but cannot change uid or role
      // Admins can update any user document
      allow update: if (isOwner(userId) && 
                      request.resource.data.uid == userId && 
                      request.resource.data.role == resource.data.role) || 
                     isAdmin();
                     
      // Only admins can delete users
      allow delete: if isAdmin();
    }
    
    // Rules for portfolios collection
    match /portfolios/{portfolioId} {
      // Anyone can read published portfolios
      // Users can read their own portfolio regardless of publication status
      // Admins can read all portfolios
      allow read: if isPublished(resource) || 
                   isOwner(resource.data.uid) || 
                   isAdmin();
      
      // Users can only create their own portfolio
      allow create: if isAuthenticated() && 
                     request.resource.data.uid == request.auth.uid &&
                     isValidPortfolio();
      
      // Users can only update their own portfolio
      // Admins can update any portfolio
      allow update: if isOwner(resource.data.uid) || 
                     isAdmin();
      
      // Users can only delete their own portfolio
      // Admins can delete any portfolio
      allow delete: if isOwner(resource.data.uid) || 
                     isAdmin();
      
      // Portfolio sections - projects, skills, etc.
      match /projects/{projectId} {
        allow read: if resource.data.userId == /databases/$(database)/documents/portfolios/$(portfolioId).data.userId || 
                    /databases/$(database)/documents/portfolios/$(portfolioId).data.isPublished == true;
        allow write: if isOwner(/databases/$(database)/documents/portfolios/$(portfolioId).data.userId);
      }
      
      match /skills/{skillId} {
        allow read: if resource.data.userId == /databases/$(database)/documents/portfolios/$(portfolioId).data.userId || 
                    /databases/$(database)/documents/portfolios/$(portfolioId).data.isPublished == true;
        allow write: if isOwner(/databases/$(database)/documents/portfolios/$(portfolioId).data.userId);
      }
      
      match /leadership/{leadershipId} {
        allow read: if resource.data.userId == /databases/$(database)/documents/portfolios/$(portfolioId).data.userId || 
                    /databases/$(database)/documents/portfolios/$(portfolioId).data.isPublished == true;
        allow write: if isOwner(/databases/$(database)/documents/portfolios/$(portfolioId).data.userId);
      }
      
      match /contact/{contactId} {
        allow read: if resource.data.userId == /databases/$(database)/documents/portfolios/$(portfolioId).data.userId || 
                    /databases/$(database)/documents/portfolios/$(portfolioId).data.isPublished == true;
        allow write: if isOwner(/databases/$(database)/documents/portfolios/$(portfolioId).data.userId);
      }
    }
    
    // Rules for messages collection (contact form submissions)
    match /messages/{messageId} {
      // Messages can be created by anyone
      allow create: if request.resource.data.createdAt is timestamp &&
                     request.resource.data.email is string &&
                     request.resource.data.message is string;
      
      // Messages can only be read by the recipient or admins
      allow read: if isOwner(resource.data.recipientId) || isAdmin();
      
      // Messages cannot be updated
      allow update: if false;
      
      // Messages can be deleted by recipient or admins
      allow delete: if isOwner(resource.data.recipientId) || isAdmin();
    }
    
    // Public portfolio directory - anyone can read, only admin can write
    match /portfolio-directory/{directoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Admin-only collections
    match /admins/{adminId} {
      allow read, write: if isAdmin();
    }
    
    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 